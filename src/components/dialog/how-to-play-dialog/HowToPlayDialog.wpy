<template>
  <view class="dialog" wx:if="{{visible}}">
    <view class="mask"
          @tap="handleOutHide"
          id="mask" />
    <image
      class="bg"
      src="{{url}}how-to-play-dialog-bg.png"/>

    <view class="dialog-content-wrap">
      <view class="icon-wrap">
        <view class="line"/>
        <image class="down-icon"
               src="{{url}}how-to-play-dialog-down-icon.png"/>
        <view class="line"/>
      </view>

      <scroll-view class="dialog-content" scroll-y >

        <repeat key="index"
                index="index"
                item="item"
                for="{{contents}}">
          <view wx:if="{{!!item.tipText}}" class="item tip-text">
            {{item.tipText}}
          </view>
          <view wx:elif="{{!!item.steps}}" class="item steps">
            <view class="item-title">
              {{item.title}}
            </view>
            <repeat key="subIndex"
                    index="subIndex"
                    item="sub"
                    for="{{item.steps}}">
              <view class="sub-item">
                <view class="circle-item"/>
                <view class="sub-item-text">
                  {{sub}}
                </view>

              </view>
            </repeat>
          </view>
          <view wx:else class="item">
            <view class="item-title">
              {{item.title}}
            </view>
            <view class="item-text">
              {{item.text}}
            </view>
          </view>
        </repeat>
      </scroll-view>
      <view class="icon-wrap">
        <view class="line"/>
        <image class="up-icon"
               src="{{url}}how-to-play-dialog-up-icon.png"/>
        <view class="line"/>
      </view>
    </view>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import {howToPlayContent} from '../../../utils/constant'

  export default class HowToPlayDialog extends wepy.component {
    components = {}

    data = {
      url:'',
      text:'sdfdsfdslfkjdslfkjdsflkj'
    }
    methods = {
      handleOutHide(e) {
        if (e && e.target && e.target.id === 'mask') {
          this.visible = false
        }
      },
      handlemove(e){

      }
    }
    computed = {
      contents(){
        return howToPlayContent
      }
    }
    props = {
      visible: {
        type: Boolean,
        value: false,
        twoWay: true
      }

    }

    onLoad() {
      this.$apply(()=>{
        this.url = this.$root.$parent.globalData.url
      })
    }
  }
</script>

<style lang="scss">
  @import "../../../css/variables";
  .dialog {
    width:100%;
    height:100%;
    position:fixed;
    left:0;
    top:0;
    bottom:0;
    right:0;
    .mask {
      position:absolute;
      width:100%;
      height:100%;
      left:0;
      right:0;
      top:0;
      bottom:0;
      background-color:#333333;
      opacity:0.9;

    }

    .bg {

      z-index:2;
      height:78.10945%;
      width:516rpx;
      position:absolute;
      left:50%;
      top:50%;
      transform: translate(-50% , -50%);
    }

    .dialog-content-wrap{
      z-index:3;
      position:absolute;
      top:33.33333%;
      height:41.79104%;
      width:420rpx;
      /*border-top:1px solid;*/
      /*border-bottom:1px solid;*/
      align-self: center;
      left:50%;
      top:33.33333%;
      transform: translateX(-50%);

      display: flex;
      flex-direction: column;

      .icon-wrap{
        position: relative;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;

        .line{
          height: 1px;
          background-color: black;
          flex:1;
        }
      }
      .down-icon{
        width: 36rpx;
        height: 36rpx;
        display: block;
      }
      .up-icon{
        width: 36rpx;
        height: 36rpx;
        display: block;
      }
    }
    .dialog-content {
      width:100%;
      flex: 1;
      overflow: auto;


      font-size: pxTorpx(12);

      .item{
        margin: pxTorpx(5) 0;
      }
      .item-title{
        font-weight: bolder;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: pxTorpx(2);
      }

      .sub-item{
        display: flex;
        flex-direction: row;

        margin-bottom: pxTorpx(2);
        .sub-item-text{
          flex: 1;
        }
        $radius:8;
        .circle-item{
          display: block;
          height: pxTorpx($radius);
          width: pxTorpx($radius);
          border-radius: pxTorpx($radius);
          background-color: black;
          margin-right: pxTorpx(5);
          transform: translateY(50%);
        }
      }

      .tip-text{
        color: red;

        &::before{
          content:'*';
          display: inline-block;
        }
      }
   /*   &::before{
        width: 36rpx;
        height: 36rpx;
        content:"";
        display: block;
        position: absolute;
        top:0;
        left:50%;
        transform: translate(-50% , -50%);
        background: url("http://
        pmdtwfss0.bkt.clouddn.com/how-to-play-dialog-down-icon.png") no-repeat;
        background-size: 100% 100%;
        z-index: 2;
      }

      &::after{
        width: 36rpx;
        height: 36rpx;
        content:"";
        display: block;
        position: absolute;
        bottom:0;
        left:50%;
        transform: translate(-50% , 50%);
        background: url("http://pmdtwfss0.bkt.clouddn.com/how-to-play-dialog-up-icon.png") no-repeat;
        background-size: 100% 100%;
        z-index: 2;
      }*/
      .content-text {
        padding:10rpx;

      }

    }



  }

</style>
