<template>
  <view class="check-in-dialog-cookbook"
        wx:if="{{visible}}"
        @touchmove="handlemove">
    <view class="mask"
          @tap="handleOutHide"
          id="mask"/>

    <view class="dialog-content">

      <view class="bg-wrap">
        <image class="bg" src="{{bg}}"/>
        <image class="bg-logo"
               src="{{bgLogo}}"/>
      </view>


      <view class="title-wrap">
        <view class="title">
          菜谱
          <image class="title-icon"
                 src="{{url}}check-in-dialog-cookbook-title-icon.png"/>
        </view>

      </view>
      <view class="text-wrap">
        <image class="title-tag-icon"
               src="{{url}}down-icon.svg"/>
       <view class="text-title">
         {{cookTitle}}
       </view>
        <view key="index"
              class="cook-step"
              index="index"
              item="step"
              for="{{cookSteps}}">
          {{step}}
        </view>
      </view>

      <image src="{{url}}dialog-close-btn.png"
             @tap="handleClose"
             class="close-btn"/>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {cookMenus} from '../../../utils/constant'

  export default class CheckInDialogCookBook extends wepy.component {
    data = {
      url:'./'
    }
    closeDialog(){
      this.$emit('dialog-close')
    }
    methods = {
      handleOutHide(e) {
        if (e && e.target && e.target.id === 'mask') {
          this.closeDialog()
          this.visible = false
        }
      },
      handlemove(e) {

      },
      handleClose(){
        this.closeDialog()
        this.visible = false
      }
    }
    computed = {
      bg(){
        const str = `${this.url}check-in-dialog-cookbook-bg${this.cookIndex}.png`
        return str
      } ,
      bgLogo(){
        const str = `${this.url}check-in-dialog-cookbook-bg-logo${this.cookIndex}.png`
        return str
      },
      cookSteps(){
        return cookMenus[this.cookIndex - 1].cookSteps
      },
      cookTitle(){
        return cookMenus[this.cookIndex - 1].title
      }
    }
    props = {
      visible: {
        type: Boolean,
        value: false,
        twoWay: true
      },
      cookIndex:Number
    }
    onLoad(){
    }
  }

</script>

<style lang="scss">
  @import "../../../css/variables";
  .check-in-dialog-cookbook {
    width: 100%;
    height: 100%;
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;

    .mask {
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      background-color: #333333;
      opacity: 0.9;

    }
    .dialog-content{
      z-index: 1;
      position: absolute;
      left:50%;
      top:50%;
      transform: translate(-50%,-50%);
      background-color: white;
      /*height: 760rpx;*/
      width: 474rpx;
      border-radius: 30rpx;
      display: flex;
      flex-direction: column;
      align-items: center;


      .bg-wrap{
        width: 422rpx;
        height: 402rpx;
        border-radius: 18rpx;
        margin-top: 20rpx;
        position: relative;
        .bg{
          width: 100%;
          height: 100%;
        }

        .bg-logo{
          position: absolute;
          width: pxTorpx(288-238);
          height: pxTorpx(367 - 286);
          right: 0;
          bottom:pxTorpx(356 - 367);
        }
      }



      .title-wrap{
        margin-top: pxTorpx(367-356);
        font-weight: bold;
        font-size: 32rpx;
        display: flex;
        justify-content: center;
        align-items: center;
        letter-spacing: pxTorpx(5);
        .title{
          position: relative;
          >image{
            position: absolute;
            top:50%;
            right: 0;
            transform: translate(100%,-50%);
            width: pxTorpx(228-205);
            height: pxTorpx(386-359);
          }
        }


      }






      .text-wrap{

        margin-top: pxTorpx(400-384);
        margin-bottom:pxTorpx(525-515);

        position: relative;
        background-color: #F5EEE3;
        width: 422rpx;
        font-size: 28rpx;
        position: relative;
        border-top: 1px solid;

        .title-tag-icon{
          width: pxTorpx(193-178);
          height: pxTorpx(193-178);
          position: absolute;
          top:0;
          left: 50%;
          transform: translate(-50% , -50%);
        }
        $font-size-title:pxTorpx(12);
        .text-title{
          font-size: $font-size-title;
          font-weight: bolder;
          margin-top: pxTorpx(404-393);


          margin: pxTorpx(404-393) pxTorpx(93-81) 0;
        }

        .logo{
          position: absolute;
          width: (200-174)*2rpx;
          height: (412-387)*2rpx;
          top: 0;
          left:50%;
          transform: translate(-50%,-50%);
          border: 10rpx solid transparent;
          overflow: hidden;
        }
        .text{
          text-align: center;
          margin-top:(428-412)*2rpx;
          margin-left:(98-82)*2rpx;
          margin-right:(98-82)*2rpx;
          margin-bottom:(515-479)*2rpx;
        }
      }



      .close-btn{
        position: absolute;
        bottom: -20rpx;
        height: 68rpx;
        width: 68rpx;
        left:50%;
        transform: translate(-50% , 100%);
      }


    }
  }
</style>
