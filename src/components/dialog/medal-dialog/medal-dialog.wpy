<template>
  <view
    class="medal-dialog"
    wx:if="{{visible}}" @touchmove="handlemove">
    <view class="mask"
          @tap="handleOutHide"
          id="mask"/>
    <view class="dialog-content">
      <image
        class="header"
        src="{{url}}medal-dialog-bg.png"/>


      <image src="{{url}}dialog-close-btn.png"
             @tap="handleClose"
             class="close-btn"/>
    </view>
    <button open-type="share" class="share-btn"/>
    <image class="medal-icon" src="{{medalIcon}}"/>
    <view class="tip-wrap">
      <view class="tip">
        恭喜您获得“<view class="tip-b">{{upgradeTip}}</view>”勋章一枚，
      </view>
      <view class="tip">
        每达到2个等级获得一枚勋章，
      </view>
      <view class="tip">
        共有6个勋章等您挑战哦！
      </view>
      <view class="tip tip-b">
        冲刺全麦王，即可瓜分十万大奖！
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  @connect({
    url:state=>state.common.cdnUrl,
    medalNum:state=>state.common.medalNum,
    wheatRank:state=>state.common.wheatRank
  },{})
  export default class MedalDialog extends wepy.component {
    components = {}

    data = {
      // url:'./'
    }
    methods = {
      handleOutHide(e) {
        if (e && e.target && e.target.id === 'mask') {
          this.visible = false
        }
      },
      handlemove(e) {

      },
      handleClose(){
        this.visible = false
      }
    }
    getLevelData(level){
      let res = {}
      switch (level) {
        case 1:
          res = { tip:'麦小粒'}
          break
        case 2:
          res = { tip:'麦小萌'}
          break
        case 3:
          res = { tip:'麦小芽'}
          break
        case 4:
          res = {tip:'麦小苗'}
          break
        case 5:
          res = { tip:'麦小穗'}
          break
        case 6:
          res = { tip:'全麦王'}
          break
      }
      return res
    }
    computed = {
      medalIcon() {
        const res = `${this.url}medal-dialog--icon-level${this.medalNum}.png`
        return res
      },
      upgradeTip() {
        const res = this.getLevelData(this.medalNum)
        return res.tip
      }
    }
    events = {}
    props = {
      visible: {
        type: Boolean,
        value: false,
        twoWay: true
      },
      // upgradeLevel: {
      //   type: Number,
      //   value: 0
      // }
    }
    onShareAppMessage(obj) {
      console.log('onShareAppMessage', obj)

      return obj
    }
    // onLoad() {
    //   this.$apply(()=>{
    //     this.url = this.$root.$parent.globalData.url
    //   })
    // }
  }
</script>

<style lang="scss">
  @import "../../../css/variables";
  $pageHeight: 667 - $statusBarHeight;
  .medal-dialog {
    z-index: 2;
    width: 100%;
    height: 100%;
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;

    .mask {
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      background-color: #333333;
      opacity: 0.9;

    }
    .dialog-content{
      z-index: 1;
      position: absolute;
      left:50%;
      transform: translate(-50%,0);
      top:percentage((132 ) / $pageHeight);
      /*height: 56.97%;*/
      height: percentage((489 - 132) / $pageHeight);
      width: 478rpx;

      display: flex;
      flex-direction: column;
      align-items: center;
      .header{
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        right: 0;
      }


      .close-btn{
        position: absolute;
        bottom: -20rpx;
        height: 68rpx;
        width: 68rpx;
        left:50%;
        transform: translate(-50% , 100%);
      }


    }

    .medal-icon{
      z-index: 1;
      position: absolute;
      left:50%;
      transform: translate(-50%,0);
      top:percentage((218 ) / $pageHeight);
      width: pxTorpx(237-135);
      height: pxTorpx(314-218);
    }


    .tip-wrap{
      z-index: 1;
      position: absolute;
      left:50%;
      transform: translate(-50%,0);
      top:percentage((352 ) / $pageHeight);
      font-size: pxTorpx(12);
      white-space: nowrap;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;

      .tip{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        margin-bottom: pxTorpx(2);
      }

      .tip-b{
        font-weight: bolder;
      }
    }

    .share-btn{
      z-index: 1;
      position: absolute;
      left:pxTorpx(241);
      top:percentage((206 ) / $pageHeight);
      width: pxTorpx(299-241);
      height: pxTorpx(221-203);

      background-color: transparent;
      border: 0;
      box-shadow: none;
      outline: none;

      &::after {
        border: none
      }
    }

  }
</style>
