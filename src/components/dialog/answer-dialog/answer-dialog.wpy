<template>
  <view class="answer-dialog" wx:if="{{visible}}" @touchmove="handlemove">
    <view class="mask"
          @tap="handleOutHide"
          id="mask"/>

    <view class="dialog-content">
      <image
        class="header"
        src="{{url}}answer-dialog-header.png"/>

      <image class="bg" src="{{bg}}"/>
      <image class="logo" src="{{url}}app-dialog-logo.png"/>
      <view class="title">



        <repeat key="index"
                index="index"
                item="t"
                for="{{answerTitle}}">
          <view>
            {{t}}
          </view>
        </repeat>


      </view>

      <repeat key="index"
              index="index"
              item="item"
              for="{{answer.questions}}">
        <button class="btn {{selectedIndex === index ? (selectedIndex === answer.rightIndex ? 'selected-right' :'selected-wrong' ) : ''}}"
                @tap="handleTap({{index}})">
          {{item}}
        </button>
      </repeat>

      <image src="{{url}}dialog-close-btn.png"
             @tap="handleClose"
             class="close-btn"/>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {answers} from '../../../utils/constant'

  export default class AnswerDialog extends wepy.component {
    components = {}

    data = {
      url: './',
      selectedIndex: -1
    }
    methods = {
      handleOutHide(e) {
        if (e && e.target && e.target.id === 'mask') {
          this.visible = false
        }
      },
      handlemove(e) {

      },
      handleTap(index){
          if(this.selectedIndex === -1){
            this.selectedIndex = index
            if(index === this.answer.rightIndex){
              this.$emit('answer-right' , this.answer)
            }
          }

      },
      handleClose(){
        this.visible = false
      }
    }
    getIndex(){
      if((this.answerIndex - 1) >= answers.length){
        return 0
      }else{
        return this.answerIndex - 1
      }
    }
    computed = {
      answerTitle(){
        let index = this.getIndex()
        console.log('index' , index, answers[index] )
        const res = answers[index]

        const t = res.answerTitle.split('\n')

        return t
      },
      answer(){
        //todo answer content
        let index = this.getIndex()
        console.log('index' , index, answers[index] )
        const res = answers[index]

        return res
      },
      bg(){
        let index = this.getIndex() + 1
        const str = `${this.url}answer-dialog-topic${this.answerIndex}.png`
        return str
      }
    }

    watch = {
      visible(v){
        if(!v){
          this.selectedIndex = -1
        }
      }
    }
    props = {
      visible: {
        type: Boolean,
        value: false,
        twoWay: true
      },
      answerIndex:{
        type:Number,
        value:1
      }

    }

    onLoad() {
      this.$apply(() => {
        this.url = this.$root.$parent.globalData.url
      })
    }
  }
</script>

<style lang="scss">
  @import "../../../css/variables";
  .answer-dialog {
    width: 100%;
    height: 100%;
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;

    .mask {
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      background-color: #333333;
      opacity: 0.9;

    }
    .dialog-content{
      z-index: 1;
      position: absolute;
      left:50%;
      top:50%;
      transform: translate(-50%,-50%);
      background-color: white;
      /*height: 56.97%;*/
      height: 760rpx;
      width: 474rpx;
      border-radius: 30rpx;
      display: flex;
      flex-direction: column;
      align-items: center;
      .header{
        z-index: 2;
        position: absolute;
        left:50%;
        top:0;
        transform: translate(-50%,-50%);
        height: 142rpx;
        width: 142rpx;
      }


      .bg{
        width: 422rpx;
        height: 402rpx;
        border-radius: 18rpx;
        margin-top: 20rpx;
        overflow: hidden;
      }
      .logo{
        position: absolute;
        width: 162rpx;
        height: 148rpx;
        border-radius: 18rpx;
        top: 304rpx;
        left:298rpx;
        overflow: hidden;
      }
      .title{
        margin-top: 56rpx;
        font-weight: bold;
        font-size: 32rpx;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        >view{
          display: flex;
          justify-content: center;
          align-items: center;
        }
      }



      .btn.selected-right{
        background-color: #84D158;
        $right:$baseCdnUrl + 'answer-dialog-right-icon.svg';
        &::before{
          position: absolute;
          background: url($right) no-repeat;
          width: 30rpx;
          height: 26rpx;
          content:'';
          display: block;
          left: 14rpx;
          top:50%;
          transform: translateY(-50%);
        }
      }
      .btn.selected-wrong{
        background-color: #B67550;
        $wrong:$baseCdnUrl + 'answer-dialog-wrong-icon.svg';
        &::before{
          position: absolute;
          background: url($wrong) no-repeat;
          width: 30rpx;
          height: 26rpx;
          content:'';
          display: block;
          left: 14rpx;
          top:50%;
          transform: translateY(-50%);
        }
      }
      .btn{
        width: 408rpx;
        height: 58rpx;
        margin: 0;
        padding: 0;
        border: none;
        border-radius: 58rpx;
        color:white;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 24rpx;
        background-color: #C2C2C2;
        margin-top: 24rpx;
        position: relative;
        /*background-color: #84D158;*/




      }

      .btn:first-of-type{
        margin-top: 42rpx;
      }


      .close-btn{
        position: absolute;
        bottom: -20rpx;
        height: 68rpx;
        width: 68rpx;
        left:50%;
        transform: translate(-50% , 100%);
      }


    }
  }
</style>
