<template>
  <view class="page">
    <view class="banner">
      <!--<image class="banner-bg" src="{{url}}home-banner.png" wx:if="{{url}}"/>-->

      <banner-swiper class="banner-swiper" :bannerImages.sync="bannerImages"/>
      <button
        class="bonus active"
        @tap="handleBonus">
        瓜分{{bonusStr}} 奖金
      </button>
    </view>

    <view class="nav-btns">

      <repeat key="index"
              index="index"
              item="btn"
              for="{{navBtns}}">

        <view class="nav-btn">
          <view class="nav-btn-bg-wrap" @tap="handleNavBtn({{btn}})">
            <image src="{{url}}{{btn.key}}.png" class="nav-btn-bg" wx:if="{{url}}"/>
          </view>

          <view class="nav-btn-text">
            {{btn.text}}
          </view>

        </view>
        <!--<view class="nav-btn-line"/>
           locked="{{url}}locked.png"
        -->
      </repeat>


    </view>
    <view class="content">
      <carouselswiper
        :selected.sync="selected"
        carousel-swiper-external="carousel-swiper"
        :images.sync="images"/>
    </view>
    <view class="footer">
      <view class="footer-body">
        <view class="medal-wrap" @tap="handleShowMedal">
          <image src="{{url}}home-footer-medal.png" wx:if="{{url}}"/>
          <view class="got-medal">
            已获
            <view class="medal-num">
              {{medalNum}}
            </view>
            枚勋章
          </view>
        </view>
        <view class="footer-text">
          <view class="footer-text-title">
            累计步数点亮勋章
          </view>
          <view class="ml-wrap">
            <view class="cur-ml-value">
              当前麦力值：{{wheatIntegral}}
            </view>
            <view>
              /
            </view>
            <view class="his-ml-value">
              历史累计麦力值：{{wheatIntegralSum}}
            </view>
          </view>
        </view>
        <view
          @tap="handleMyStep"
          class="step-wrap">
          <image src="{{cdnUrl}}home-footer-my-step.png" wx:if="{{url}}"/>
          <view class="step">
            我的步数
          </view>
        </view>
      </view>
      <view class="footer-btm">
        <view class="line"/>
        <view class="footer-btm-text" @tap="handleHowToPlay">
          玩法说明
        </view>
        <view class="line"/>
      </view>
    </view>
    <how-to-play-dialog :visible.sync="showHowToPlayDialog"/>
    <answer-dialog :visible.sync="showAnswerDialog"
                   :answerIndex.sync="answerIndex"/>
    <check-in-dialog
    :visible.sync="showCheckInDialog"
                   :points.sync="checkInPoints"
  />
    <check-in-dialog-ex
    :visible.sync="showCheckInDialogEx"/>
    <check-in-dialog-cookbook
    :visible.sync="showCheckInCookBookDialog"
                   :cookIndex.sync="checkInCookIndex"
  />
    <cash-pool-dialog
      :total.sync="cashTotal"
      :bonus.sync="cashBonus"
      :visible.sync="showCashPoolDialog"/>
    <cash-pool-dialog-tip
      :visible.sync="showCashPoolDialogTip"
      :isStart.sync="isStartCashPool"
    />
    <ml-value-dialog
      :upgradeLevel.sync="mlUpgradeLevel"
      :visible.sync="showMlValueDialog"/>
    <medal-dialog
      :upgradeLevel.sync="mediaUpgradeLevel"
      :visible.sync="showMedalDialog"/>
    <auth-dialog
      :visible.sync="showAuthDialog"/>
    <step-auth-dialog
      :visible.sync="showStepAuthDialog"/>



  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import {WX_LOGIN , STEP , WX_STEP , ISSTARTBONUS , BANNERIMAGES,ANSWER ,SIGN ,NAVTYPE , TOTALSTEP} from '../store/types/http'
  import { _wxLogin } from '../store/actions'
  import { numberWithCommas, isMorning, getRandomInt, showMsg } from '../utils/common'
  import { wxLogin, nowStep, getStep, isOpenCarveUp, carveUp, getBanner, sign ,getAnswer,getWXStep} from '../http/http-business'
  import { CURRENT_MEDAL_NUM, CURRENT_RANK } from '../utils/constant'
  //组件引用不能带.wpy后缀
  import CarouselSwiper from '../components/carouse-item/carousel-swiper'
  import HowToPlayDialog from '../components/dialog/how-to-play-dialog/HowToPlayDialog'
  import AnswerDialog from '../components/dialog/answer-dialog/answer-dialog'
  import CheckInDialog from '../components/dialog/check-in-dialog/check-in-dialog'
  import CheckInDialogEx from '../components/dialog/check-in-dialog-ex/check-in-dialog-ex'
  import CashPoolDialog from '../components/dialog/cash-pool-dialog/cash-pool-dialog'
  import CashPoolDialogTip from '../components/dialog/cash-pool-dialog/cash-pool-dialog-tip'
  import CheckInDialogCookBook from '../components/dialog/check-in-dialog-cookbook/check-in-dialog-cookbook'
  import MlValueDialog from '../components/dialog/medal-dialog/ml-value-dialog'
  import MedalDialog from '../components/dialog/medal-dialog/medal-dialog'
  import AuthDialog from '../components/dialog/auth-dialog/auth-dialog'
  import StepAuthDialog from '../components/dialog/auth-dialog/step-auth-dialog'
  import BannerSwiper from '../components/banner-swiper'
  import LoadingBar from '../components/loading-bar'

  @connect({
    // token(state) {
    //   return state.common.token
    // },
    // cdnUrl(state) {
    //   return state.common.cdnUrl
    // },
    token:state=>state.common.token,
    cdnUrl:state=>state.common.cdnUrl,
    medalNum:state=>state.common.medalNum,
    wheatIntegral:state=>state.common.wheatIntegral,
    wheatIntegralSum:state=>state.common.wheatIntegralSum,
    wheatRank:state=>state.common.wheatRank,
    encryptedData:state=>state.common.encryptedData,
    iv:state=>state.common.iv,
    sign:state=>state.common.sign,
  }, {
    WX_LOGIN,
    WX_STEP,
    STEP,
    ISSTARTBONUS,
    BANNERIMAGES,
    ANSWER,
    SIGN,
    NAVTYPE,
    TOTALSTEP
  })

  export default class Home extends wepy.page {
    config = {}
    components = {
      'carouselswiper':CarouselSwiper,
      'how-to-play-dialog':HowToPlayDialog,
      'answer-dialog':AnswerDialog,
      'check-in-dialog-ex':CheckInDialogEx,
      'check-in-dialog':CheckInDialog,
      'check-in-dialog-cookbook':CheckInDialogCookBook,
      'cash-pool-dialog':CashPoolDialog,
      'cash-pool-dialog-tip':CashPoolDialogTip,
      'ml-value-dialog':MlValueDialog,
      'medal-dialog':MedalDialog,
      'auth-dialog':AuthDialog,
      'step-auth-dialog':StepAuthDialog,
      'banner-swiper':BannerSwiper,
      'loading-bar':LoadingBar,
    }

    data = {
      url: '',
      navBtns: [
        { key: 'home-nav-btn1', text: '早起挑战'},
        { key: 'home-nav-btn2', text: '麦力值挑战' },
        { key: 'home-nav-btn3', text: '知识挑战' },
        { key: 'home-nav-btn4', text: '幸运挑战' }
      ],
      cashTotal:'',
      cashBonus:'0',
      // medalNum: 0,
      // wheatIntegral: 0,
      // wheatIntegralSum: 0,
      //开通的小麦等级
      // wheatRank:0,
      bonus:100000,
      images:[],
      selected:0,
      mlUpgradeLevel:0,
      mediaUpgradeLevel:0,

      showAuthDialog:false,
      showStepAuthDialog:false,

      showMlValueDialog:false,
      showMedalDialog:false,


      showCashPoolDialog:false,
      showCashPoolDialogTip:false,
      isStartCashPool:false,
      showHowToPlayDialog:false,
      showCheckInDialog:false,
      showCheckInDialogEx:false,
      showCheckInCookBookDialog:false,
      checkInPoints:1,
      checkInCookIndex:1,
      showAnswerDialog:false,
      answerIndex:1,

      // bannerImages:[]
      bannerImages:[]
    }
    computed = {
      bonusStr () {
        const str = `${this.bonus}`
        return numberWithCommas(str)
      },
      isBonusEnable(){
        console.log('isBonusEnable' , this.medalNum , this.wheatRank )
        return this.medalNum == 6 && this.wheatRank == 12
      }
    }
    async _getAnswer(){
      const answer = await getAnswer()
      console.log('answer' , answer)
      this.methods.ANSWER(answer)
      if(answer){
        this.showAnswerDialog = true
        this.$apply()
      }else{
        showMsg('今日知识挑战已完成')
      }
    }

    async _sign(){
      let res = await sign()
      console.log('sign' , res)
      // res = {...res , ...{type:1 , integral:2}}
      this.methods.SIGN(res)

      this.showCheckInDialogEx = true
      this.$apply()
      // if(res.hadSign){
      //   this.showCheckInCookBookDialog = true
      // }else{
      //   this.showCheckInDialog = true
      // }
    }
    methods = {
      async handleNavBtn(btn) {
        try{
          switch (btn.text) {
            case '早起挑战':
              await this._sign()

              // const hadCheckIn = await sign()
              // if(hadCheckIn){
              //   this.showCheckInCookBookDialog = true
              //   this.checkInCookIndex = getRandomInt(1,5)
              // }else{
              //   this.showCheckInDialog = true
              //   if(isMorning()){
              //     this.checkInPoints = getRandomInt(10,20)
              //   }else{
              //     this.checkInPoints = getRandomInt(1,5)
              //   }
              // }
              // this.$parent.globalData.hadCheckIn = true
              break
            case '麦力值挑战':
              this.methods.NAVTYPE('step-rank')
              this.$navigate('/new-pages/step-rank/index')
              break
            case '知识挑战':
              await this._getAnswer()
              // this.showAnswerDialog = true
              // this.answerIndex = getRandomInt(1,10)
              break
            case '幸运挑战':
              this.methods.NAVTYPE('lottery')
              this.$navigate('/new-pages/lottery/index')
              break
          }
        }catch (e) {
          showMsg(e)
        }

      },
      handleHowToPlay(){
        // if(th)
        this.showHowToPlayDialog = true
      },
      handleShowMedal(){
        if(this.medalNum > 0){
          this.showMedalDialog = true
        }

      },
      handleMyStep(){
        this.$navigate('../new-pages/step-share/index')
      },
      async handleBonus(){
        try {


          console.log('handleBonus' , this.isBonusEnable)
          if(this.isBonusEnable){
            const isStartBonus = await isOpenCarveUp()

            if(isStartBonus){
              const {money , peopleNum} = await carveUp()
              this.cashBonus = money
              this.cashTotal = peopleNum
              this.showCashPoolDialog = true
            }else{
              this.showCashPoolDialogTip = true
              this.isStartCashPool = true
            }
            this.$apply()
          }else{
            this.showCashPoolDialogTip = true
            this.isStartCashPool = false
          }


        }catch (e) {
          showMsg(e)
        }

      }
    }

    events = {
      'answer-right':(answer) => {
        console.log('answer right , ' , answer)
        this.getStep()
      },
      'getuserinfo':userInfo => {
        if(userInfo){
          this.showAuthDialog = false
          this.$parent.globalData.userInfo = userInfo
          this.login()
        }
      },
      'auth-step':stepInfo => {
        if(stepInfo && stepInfo.encryptedData){
          this.showStepAuthDialog = false
          // this.$parent.globalData.stepInfo = stepInfo

          const { encryptedData, iv } = stepInfo
          this.methods.WX_STEP({
            encryptedData, iv
          })
          this.getStep()
        }
      },
      'check-in-dialog-close':()=>{
        if(this.sign && this.sign.type == 1){
          //第一次签到后刷新数据
          this.getStep()
        }

      }
    }
    async login(){
      try {
        const userInfo =this.$parent.globalData.userInfo
        const {token} = await wxLogin(this.$parent.globalData.code ,
          userInfo.avatarUrl,
          userInfo.nickName,
          userInfo.gender
        )

        this.methods.WX_LOGIN({
          token
        })

        // this.methods._wxLogin(this.$parent.globalData.code ,
        //   userInfo.avatarUrl,
        //   userInfo.nickName,
        //   userInfo.gender)


        // this.$parent.globalData.token = token
        // console.log('token' , token)
        await this.authStep()
      }catch (e) {
        showMsg(e)
      }finally {
        this.$apply()
      }

    }

    isShowMedalDialog(medalNum) {
      const res = wx.getStorageSync(CURRENT_MEDAL_NUM)
      if (res) {
        if (medalNum > res && medalNum != 0) {
          this.showMedalDialog = true
          this.mediaUpgradeLevel = medalNum
          wx.setStorageSync(CURRENT_MEDAL_NUM, medalNum)
        }
      } else {
        if(medalNum > 0){
          this.showMedalDialog = true
          this.mediaUpgradeLevel = medalNum
        }
        wx.setStorageSync(CURRENT_MEDAL_NUM, medalNum)
      }

    }
    isShowWheatNumDialog(wheatRank){
      const res = wx.getStorageSync(CURRENT_RANK)
      if (res) {
        if (wheatRank > res && wheatRank != 0) {
          this.showMlValueDialog = true
          this.mlUpgradeLevel = wheatRank
          wx.setStorageSync(CURRENT_RANK, wheatRank)
        }
      } else {
        if(wheatRank > 0){
          this.showMlValueDialog = true
          this.mlUpgradeLevel = wheatRank
        }
        wx.setStorageSync(CURRENT_RANK, wheatRank)
      }
    }
    initCarouselSwiperImages(wheatRank){
      const steps = [5,8,15,40,80,120,160,200,240,280,320,360]
      // this.selected = wheatRank
      const images = []
      for (let i = 0; i < 12; i++) {
        let m = {
          url:`${this.url}home-level${i+1}.png`,
          icon:`${this.url}home-icon${i+1}.png`,
          locked:(i + 1)> wheatRank,
          step:`${steps[i]}k`,
          wheatRank:(i+1)
        }

        images.push(m)
      }

      this.images = [...images]

      console.log('init images' , this.images)
    }


    async _getTotalStep(){
      try {
        const totalStep = await getWXStep()
        this.methods.TOTALSTEP({
          totalStep
        })
      }catch (e) {
        showMsg(e)
      }
    }
    async _getWheatInfo(){
      try {

      }catch (e) {
        showMsg(e)
      }
    }
    //如果用户拒绝了授权步数，不用处理步数
    async getStep() {
      try {
        // const { encryptedData, iv } = this.$parent.globalData.stepInfo
        // const stepInfo = await wepy.getWeRunData()
        //
        // const { encryptedData, iv } = stepInfo
        // this.methods.WX_STEP({
        //   encryptedData, iv
        // })
        await nowStep(this.encryptedData, this.iv)

        let { medalNum, wheatIntegral, wheatIntegralSum, wheatRank } = await getStep()
        this.methods.STEP({
          medalNum, wheatIntegral, wheatIntegralSum, wheatRank
        })
        this.selected = wheatRank - 1
        this.initCarouselSwiperImages(wheatRank)
        this.isShowMedalDialog(medalNum)
        this.isShowWheatNumDialog(wheatRank)







        // this.$navigate('/new-pages/step-share/index')


        // this.$navigate('/new-pages/step-rank-get-prize/index')



      } catch (e) {
        console.log(e)
        showMsg(e)
      }finally {
        this.$apply()
      }
    }

    async authUserInfo(){
      const {authSetting} = await wepy.getSetting()


      if(authSetting['scope.userInfo']){
        const {userInfo} = await wepy.getUserInfo()
        this.$parent.globalData.userInfo = userInfo
        await this.login()
      }else{

        this.$apply(()=>{
          this.showAuthDialog = true
        })
      }
    }
    async authStep(){
      // const {authSetting} = await wepy.getSetting()
      // if(authSetting['scope.werun']){
      //   const stepInfo = await wepy.getWeRunData()
      //
      //   const { encryptedData, iv } = stepInfo
      //   this.methods.WX_STEP({
      //     encryptedData, iv
      //   })
      //   await this.getStep()
      // }else{
      //   this.$apply(()=>{
      //     this.showStepAuthDialog = true
      //   })
      // }

      const stepInfo = await wepy.getWeRunData()

      const { encryptedData, iv } = stepInfo
      this.methods.WX_STEP({
        encryptedData, iv
      })


      await this.getStep()

      await this._getTotalStep()

      const bannerImages = await getBanner(1)
      this.bannerImages = bannerImages
      this.methods.BANNERIMAGES({
        bannerImages
      })

    }

    /***
     *code->auth userinfo -> wxlogin -> auth wxstep -> get step
     */
    async init() {
      try {

        const { code } = await wepy.login()
        console.log('code' , code)
        this.$parent.globalData.code = code

        await this.authUserInfo()
      } catch (e) {
        showMsg(e)
      }
    }
    onLoad() {
      this.url = this.$parent.globalData.url
      this.init()


    };
    onShow(){
      //刷新微信步数
      // if(this.$parent.globalData.code){
      //   console.log('刷新微信步数')
      //   this.getStep()
      // }

    }
    // Other properties
  }
</script>


<style lang="scss">
  @import "../css/variables";

  $footer-fontsize: 18rpx;
  $pageHeight:667 - $statusBarHeight;
  .page {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: stretch;

    background-color: #F3F1EA;
    .banner {
      height: percentage((187 - $statusBarHeight) / $pageHeight);
      width: 100%;
      position: relative;
      display: flex;
      justify-content: center;
      >.banner-swiper{
        width: 100%;
        height: 100%;
      }

      .bonus{
        width: 370rpx;
        height: 45rpx;
        position: absolute;
        margin: 0;
        padding: 0;
        border: none;
        border-radius: 45rpx;
        bottom: 26rpx;
        left:50%;
        transform: translateX(-50%);

        color:white;
        font-weight: bold;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 32rpx;
        background-color: #C2C2C2;
        box-shadow:  0 10rpx 30rpx black;
        &.active{
          background-color: #F5B020;
        }
      }



    }

    .nav-btns {
      /* height: percentage((264 - 187) / 667);*/
      display: flex;
      flex-direction: row;
      background-color: #FFFFFF;

      .nav-btn {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        /*padding: 14rpx 44rpx 20rpx 44rpx;*/
        margin: 14rpx 0 20rpx;


        .nav-btn-bg-wrap {
          width: 88rpx;
          height: 88rpx;
          /*padding: 14rpx 44rpx 0 44rpx;*/
          border-radius: 88rpx;

          overflow: hidden;
        }

        .nav-btn-bg {
          width: 100%;
          height: 100%;
        }

        .nav-btn-text {
          font-size: 20rpx;
          /*padding: 10rpx 0 20rpx 0;*/
          margin-top: 10rpx;
          white-space: nowrap;
        }


        &:not(:last-child) {
          /*width: 2rpx;*/
          /*height: 112rpx;*/
          /*background-color: #D2D2D2;*/
          /*margin-top: 8rpx;*/

          border-right: 1rpx solid #D2D2D2;
        }
      }

      /*.nav-btn-line{*/

      /*&:not(:last-child){*/
      /*width: 2rpx;*/
      /*height: 112rpx;*/
      /*background-color: #D2D2D2;*/
      /*margin-top: 8rpx;*/
      /*}*/
      /*}*/
    }

    .content {
      flex: 1;
      display: flex;
      /*> view{*/
        /*flex:1;*/
        /*margin: 14rpx 10rpx;*/
      /*}*/
      .carousel-swiper{
        margin: 14rpx 10rpx;
        /*width: 100%;*/
        /*height: 100%;*/
        flex:1;
      }
    }

    .footer {
      /*height: 13.19%;*/
      height: 178rpx;
      background-color: #FFFFFF;
      padding: 6rpx 30rpx 8rpx;

      .footer-body {
        /*margin: 0 30rpx;*/
        display: flex;
        flex-direction: row;
        margin-bottom: 24rpx;

        .medal-wrap {
          display: flex;
          flex-direction: column;
          width: 138rpx;
          justify-content: center;
          align-items: center;
          white-space: nowrap;

          > image {
            width: 76rpx;
            height: 68rpx;
          }

          .got-medal {
            font-size: $footer-fontsize;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;

            .medal-num {
              color: red;
              font-size: 28rpx;
              font-weight: bold;
              margin: 0 2rpx;
            }
          }
        }

        .footer-text {
          font-family:Microsoft YaHei;
          flex: 1;
          display: flex;
          flex-direction: column;

          justify-content: center;
          align-items: center;

          /*margin-top: 26rpx;*/
          .footer-text-title {
            font-weight: bold;
            font-size: 30rpx;

            /*margin-bottom: 22rpx;*/
            height: 68rpx;
            display: flex;
            flex-direction: column;
            justify-content: center;
          }

          .ml-wrap {
            display: flex;
            flex-direction: row;
            font-size: $footer-fontsize;
            white-space: nowrap;

            >view{
              margin: 0 10rpx;
            }
          }
        }

        .step-wrap {
          width: 138rpx;
          font-size: $footer-fontsize;
          position: relative;

          display: flex;
          flex-direction: column;

          justify-content: center;
          align-items: center;
          > image {
            width: 72rpx;
            height: 50rpx;
            position: relative;
            top:9rpx;
            margin-bottom: 18rpx;
          }
        }
      }

      .footer-btm {
        display: flex;
        flex-direction: row;
        align-items: center;

        .line {
          height: 0;
          border-bottom: 1rpx solid black;
          /*background-color: black;*/
          flex: 1;
        }

        .footer-btm-text {
          font-size: $footer-fontsize + 4rpx;
          margin: 0 10rpx;
          position: relative;


        }
        .footer-btm-text::after {
          content: '>';
          position: absolute;
          transform: rotate(90deg);
          left: 50%;
          top: 100%;
        }
      }
    }
  }
</style>
