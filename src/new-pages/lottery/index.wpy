<template>
  <view class="page">

    <banner-swiper class="banner"  :bannerImages.sync="bannerImages"/>
    <!--<image class="banner" src="{{url}}lottery-banner.png"/>-->
    <image class="lottery-logo" src="{{url}}lottery-logo.png"/>


    <view class="content">
      <image class="bg" src="{{url}}lottery-bg1.png"/>
    </view>

    <image class="lottery-ml ml-left"
           wx:if="{{showMl == 0}}"
           src="{{url}}lottery-ml-left.png"/>
    <image class="lottery-ml ml-center"
           wx:if="{{showMl == 1}}"
           src="{{url}}lottery-ml-center.png"/>
    <image class="lottery-ml ml-right"
           wx:if="{{showMl == 2}}"
           src="{{url}}lottery-ml-right.png"/>



    <view class="lottery-btn-wrap"
          @tap="handleLottery">
      <image class="lottery-btn"
             src="{{url}}lottery-btn.png"/>

      <view class="lottery-btn-text">
        <view class="need-ml-value">
          -{{needMlValue}}
        </view>
        麦力值
      </view>
    </view>

    <repeat key="id"
            index="index"
            item="prize"
            for="{{prizes}}">
      <view class="prize"
            data-set-index="{{index}}"
            @tap="handlePrize({{index}})">
        <!--<image class="prize-bg"-->
               <!--src="{{prize.prizeImg}}"/>-->
        <!--<view class="prize-bg"  style="background-image:url('{{prize.prizeImg}}');">-->

        <!--</view>-->
        <image class="prize-bg"
               data-index="{{index}}"
               style="width:{{imageSize[index].width}}rpx; height:{{imageSize[index].height}}rpx;"
               bindload="handleBindload"
               src="{{prize.prizeImg}}"/>
        <view class="prize-text">
          {{prize.prizeName}}
        </view>
      </view>
    </repeat>




    <image class="lottery-fixed-icon"
           @tap="handleRedeemPrize"
           src="{{url}}lottery-fixed-icon.png"/>

    <view class="ml-value {{}}">
      当前麦力值：{{wheatIntegral}}
    </view>
    <!--<view class="footer">-->
      <!--<image class="footer-bg" src="{{url}}navigate-bar.png"/>-->
      <!--<repeat key="index"-->
              <!--index="index"-->
              <!--item="btn"-->
              <!--for="{{navBtns}}">-->
        <!--<view class="footer-btn" @tap="handleNav({{index}})"/>-->
      <!--</repeat>-->
    <!--</view>-->

    <view class="get-prize-wrap" wx:if="{{isLotterying}}">

      <image class="get-prize-bg"
             src="{{url}}lottery-prize-bg1.png"/>
      <image class="ml {{isLotterying ? 'active' : ''}}"
             src="{{url}}lottery-prize-ml.png"/>
    </view>
    <navigate-bar navType="lottery"/>

    <get-prize-dialog
      :text.sync="getPrizeText"
      :visible.sync="showGetPrizeDialog"/>
    <lottery-points-not-enough-dialog
      :visible.sync="showErrorDialog"/>
  </view>

</template>



<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import {prizelist , getPrize, getBanner} from '../../http/http-business'
  import {showMsg} from '../../utils/common'
  import {PRIZE} from '../../store/types/http'
  import GetPrizeDialog from '../../components/dialog/get-prize-dialog/get-prize-dialog'
  import LotteryPointsNotEnoughDialog from '../../components/dialog/lottery-points-not-enough-dialog/lottery-points-not-enough-dialog'
  import NavigateBar from '../../components/navigate-bar'
  import BannerSwiper from '../../components/banner-swiper'
  @connect({
    url:state=>state.common.cdnUrl,
    wheatIntegral:state=>state.common.wheatIntegral,
    prize:state=>state.common.prize,
  },{
    PRIZE
  })

  export default class Title extends wepy.page {
    config = {}
    components = {
      'get-prize-dialog':GetPrizeDialog,
      'lottery-points-not-enough-dialog':LotteryPointsNotEnoughDialog,
      'navigate-bar':NavigateBar,
      'banner-swiper':BannerSwiper
    }

    data = {
      // url:'./',
      navBtns: [
        { key: 'mzl' },
        { key: 'zstz' },
        { key: 'xytz' },
        { key: 'return' }
      ],
      mlValue:123456,
      needMlValue:30,
      prizes:[],
      showMl:1,
      showGetPrizeDialog:false,
      showErrorDialog:false,
      isLotterying:false,
      getPrizeText:'',
      bannerImages:[],
      imageSize:[{},{},{},{},{},{}],
      px2rpx:''
    }
    methods = {
      handleBindload(e) {


        const originWidth = e.detail.width * this.px2rpx,
          originHeight = e.detail.height * this.px2rpx,
          ratio = originWidth / originHeight,
          index = e.target.dataset.index
          let viewWidth  = 108, viewHeight = 62,viewRatio = viewWidth/viewHeight


        if(index == 1){
          viewWidth = 154, viewHeight = 94 , viewRatio = viewWidth/viewHeight

          console.log(index)
        }

        // if(ratio>=viewRatio){
        //   if(originWidth>=viewWidth){
        //     viewHeight = viewWidth/ratio;
        //   }else{
        //     viewWidth = originWidth;
        //     viewHeight = originHeight
        //   }
        // }else{
        //   if(originWidth>=viewWidth){
        //     viewWidth = viewRatio*originHeight
        //   }else{
        //     viewWidth = viewRatio*originWidth;
        //     viewHeight = viewRatio*originHeight;
        //   }
        // }
        //
        if(originWidth > viewWidth && originHeight > viewHeight){
          if(originWidth > originHeight){

            if(viewWidth/ratio > viewHeight){
              viewWidth = viewHeight*ratio;
            }else{
              viewHeight = viewWidth/ratio;
            }
          }else{
            if(viewHeight*ratio > viewWidth){
              viewHeight = viewWidth/ratio;
            }else{
              viewWidth = viewHeight*ratio;
            }

          }
        }else{
          if(originWidth > originHeight){

            if(viewWidth/ratio > viewHeight){
              viewWidth = viewHeight*ratio;
            }else{
              viewHeight = viewWidth/ratio;
            }

            // viewWidth = viewHeight*ratio;

          }else{
            if(viewHeight*ratio > viewWidth){
              viewHeight = viewWidth/ratio;
            }else{
              viewWidth = viewHeight*ratio;
            }
            // viewHeight = viewWidth/ratio;
          }
        }


        // if(ratio>=viewRatio){
        //   if(originWidth>=viewWidth){
        //
        //     viewHeight = viewWidth/ratio;
        //   }else{
        //     viewWidth = originWidth;
        //     viewHeight = originHeight
        //   }
        // }else{
        //   if(originWidth>=viewWidth){
        //     viewWidth = viewRatio*originHeight
        //   }else{
        //     viewWidth = viewRatio*originWidth;
        //     viewHeight = viewRatio*originHeight;
        //   }
        // }
        viewWidth = viewWidth
        viewHeight = viewHeight

        console.log(viewWidth , viewHeight  , ratio , viewWidth/viewHeight)
        this.imageSize[index]={
          width:viewWidth,
          height:viewHeight
        }

        this.imageSize = [...this.imageSize]

      },
      handleNav(index) {

        switch (index) {
          case 0:
            break
          case 1:
            break
          case 2:
            break
          case 3:
            wx.navigateBack({
              delta: 1
            })
            break
        }
      },
      handlePrize(prize){

      },
      async handleLottery(){
        try {
          const res = await getPrize()

          if(res){
            this.setTime()
            this.methods.PRIZE(res)
            this.isLotterying = true
            this.lotteryTime = setTimeout(()=>{
              this.showGetPrizeDialog = true
              this.$apply()
            } , 1200)
            // this.showGetPrizeDialog = true
          }else{
            this.showErrorDialog = true
          }
          this.$apply()
        }catch (e) {
          showMsg(e)
        }

        // console.log('handleLottery')
        // this.getPrizeText = '曼可顿超醇全麦8片装'
        // this.showGetPrizeDialog = true
        // this.$apply()
      },
      handleRedeemPrize(){
        console.log('handleRedeemPrize')
      }
    }

    events = {
      'goto':()=>{
        console.log('goto dialog')
        const url = `/new-pages/step-rank-get-prize/index?from=lottery&id=${this.prize.id}`
        this.$navigate(url)
      },
      'navigate-bar':(index)=>{
        console.log('navigate-bar' , index)
      },

    }
    onUnload(){
      if(this.time){
        clearInterval(this.time)
        this.time = null
      }

      if(this.lotteryTime){
        clearTimeout(this.lotteryTime)
        this.lotteryTime = null
      }
    }
    setTime(){
      this.que = [0 , 1 ,2 , 1]
      this.count = 0
      this.time = setInterval(()=>{
        this.count = (++this.count % 4)
        this.showMl = this.que[this.count]
        this.$apply()
      } , 500)
    }
    onShow(){
      this.isLotterying = false
      this.showGetPrizeDialog = false
      this.showErrorDialog = false
    }

    onHide(){
      if(this.time){
        clearInterval(this.time)
        this.time = null
      }
      if(this.lotteryTime){
        clearTimeout(this.lotteryTime)
        this.lotteryTime = null
      }
    }
    async init(){
      try {
        const res = await prizelist()
        console.log(' this.prizes' ,  res)
        this.prizes = res
        this.bannerImages = await getBanner(2)

      }catch (e) {
        showMsg(e)
      }finally {
        this.$apply()
      }
    }
    onLoad() {
      // this.url = this.$parent.globalData.url
      const res = wx.getSystemInfoSync()

      this.px2rpx = 750 / res.windowWidth;

      this.init()
    }

    // Other properties
  }
</script>


<style lang="scss">
  @import "../../css/variables";

  $pageHeight: 667- $statusBarHeight;

  .page {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    background-color: white;

    .get-prize-wrap{
      z-index: 100;
      position: absolute;
      width: 100%;
      height: percentage((598 - 197) / $pageHeight);
      top: percentage((197- $statusBarHeight) / $pageHeight);
      >image{
        width: 100%;
        height: 100%;
      }
      .ml{
        position: absolute;
        transition: transform 1s ease-in;
        /*transform: scale(0);*/
        height: pxTorpx(441 - 312);
        width: pxTorpx(225-149);
        left:50%;
        top: 50%;
        transform: translate(-50%,-50%);
        animation: ml 1s linear 1;
      }

      @keyframes ml {
        from{
          transform: translate(-50%,-50%) scale(0);
        }
        to{
          transform: translate(-50%,-50%) scale(1);
        }
      }

    }

    .banner {
      height: percentage((187 - $statusBarHeight) / $pageHeight);
      width: 100%;
    }


    .lottery-logo{
      position: absolute;
      top: 0;
      height: percentage((85 - 60) / $pageHeight);
      width: 90rpx;
      left:626rpx;
    }
    .content{
      position: absolute;
      width: 100%;
      top: percentage((197 - $statusBarHeight) / $pageHeight);
      height: percentage((593 - 197) / $pageHeight);;
      >image{
        width: 100%;
        height: 100%;
      }
    }



    .prize{
      z-index: 2;
      position: absolute;
      height: 128rpx;
      width: 128rpx;
      border-radius: 128rpx;
      border: 2px solid #FAB600;
      overflow: hidden;
      background-color: white;
      display: flex;
      flex-direction: column;
      align-items: center;
      /*justify-content: center;*/
      >image{
        width: 108rpx;
        height: 62rpx;
        margin-top: 20rpx;

      }
      .prize-text{

        font-size: 18rpx;
        white-space: nowrap;
      }


      &[data-set-index='0']{
        top: percentage((229 - $statusBarHeight) / $pageHeight);
        left: 60rpx;
      }
      &[data-set-index='1']{
        top: percentage((340 - $statusBarHeight) / $pageHeight);
        left: 90rpx;
        /*height: 182rpx;*/
        /*width: 182rpx;*/

        width: pxTorpx(129-29);
        height:pxTorpx(129-29);
        /*border-radius: 182rpx;*/
        /*transform: scale(1.42);*/
        &>image{
          width: pxTorpx(120-40);
          height:pxTorpx(391-343);
          margin-top: 28rpx;
        }

        &> .prize-text{
          top: pxTorpx(391-330);
        }
      }
      &[data-set-index='2']{
        top: percentage((429 - $statusBarHeight) / $pageHeight);
        left: 34rpx;
      }
      &[data-set-index='3']{
        top: percentage((264 - $statusBarHeight) / $pageHeight);
        left: 285*2rpx;
      }
      &[data-set-index='4']{
        top: percentage((322 - $statusBarHeight) / $pageHeight);
        left: 238*2rpx;
      }
      &[data-set-index='5']{
        top: percentage((446 - $statusBarHeight) / $pageHeight);
        left: 262*2rpx;
      }
    }


    .ml-value{
      position: absolute;
      width: 100%;
      top: percentage((202 - $statusBarHeight) / $pageHeight);
      left:251*2rpx;
      color:white;
      font-size: 24rpx;
      font-style: italic;
      text-shadow:2rpx 2rpx 8rpx black;
    }


    $delay:3s;
    .lottery-ml{
      position: absolute;
      top: percentage((215 - $statusBarHeight) / $pageHeight);
      height: percentage((516 - 215) / $pageHeight);
      width: 304rpx;
      left:50%;
      transform: translateX(-50%);

      /*animation-name: lottery-ml-animation;*/
      animation-duration: $delay * 2;
      animation-iteration-count: infinite;
      animation-direction: alternate;
      animation-timing-function: linear;
    }

    @keyframes lottery-ml-animation {
      from{
        opacity: 1;
      }
      to{
        opacity: 0;
      }
    }

    .ml-left{
    }

    .ml-center{
      animation-delay: $delay;
    }

    .ml-right{
      animation-delay: $delay * 2;
    }
    .lottery-btn-wrap{
      position: absolute;
      top: percentage((490 - $statusBarHeight) / $pageHeight);
      height: percentage((568 - 516) / $pageHeight);
      width: 224rpx;
      left:50%;
      transform: translateX(-50%);
      >image{
        position: absolute;
        width: 100%;
        height: 100%;
      }

      $btnHeight:52;
      $ml-font-size:20rpx;
      .lottery-btn-text{
        position: relative;
        color: white;
        font-size: $ml-font-size;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        white-space: nowrap;
        top: percentage((530 - 516) / $btnHeight);
        font-weight: bolder;
        .need-ml-value{
          font-size: $ml-font-size + 20;

        }
      }
    }





    .lottery-fixed-icon{
      z-index: 100;
      position: absolute;
      top: percentage((527 - $statusBarHeight) / $pageHeight);
      height: percentage((598 - 527) / $pageHeight);
      width: 186rpx;
      left:546rpx;
      animation-name: lottery-fixed-icon-animation;
      animation-duration: 3s;
      animation-iteration-count: infinite;
      animation-direction: alternate;
      animation-timing-function: linear;
    }

    @keyframes lottery-fixed-icon-animation {
      from{
        top:percentage((515 - $statusBarHeight) / $pageHeight);
      }
      to{
        top:percentage((530 - $statusBarHeight) / $pageHeight);
      }
    }



  }
</style>
